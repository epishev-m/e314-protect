<Project Sdk="Microsoft.NET.Sdk">

    <PropertyGroup>
        <TargetFramework>net6.0</TargetFramework>
        <Nullable>disable</Nullable>
        <LangVersion>9</LangVersion>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Title>E314.Protect</Title>
        <Authors>Maksim Epishev (epishev.m@mail.ru)</Authors>
        <Copyright>Copyright (c) 2025 Maksim Epishev (epishev.m@mail.ru)</Copyright>
        <RepositoryType>Git</RepositoryType>
        <Version>2.1.0</Version>
        <PackageId>E314.Protect</PackageId>
        <RepositoryUrl>https://github.com/epishev-m/e314-protect.git</RepositoryUrl>
        <Description>The E314.Protect module provides methods for validating input data and conditions.
It prevents errors caused by invalid data by throwing exceptions with informative messages.</Description>
        <PackageProjectUrl>https://github.com/epishev-m/e314-protect</PackageProjectUrl>
        <PackageLicenseFile>LICENSE</PackageLicenseFile>
        <PackageReadmeFile>README.md</PackageReadmeFile>
        <PackageTags>contracts requires args arg unity</PackageTags>
        <PackageReleaseNotes># CHANGELOG

## [2.1.0] - 2025-02-24

### Added

- `Requires.NotDisposed`: Throws a `ObjDisposedException`, indicating an attempt to use the object after it has been released.

## [2.0.0] - 2025-02-22

Migration to `E314.Exceptions`

### Breaking Changes

- The E314.Require module has been updated to use custom exceptions from the `E314.Exceptions` module instead of System.Exception. This change impacts how exceptions are thrown and handled.
- Existing code that relies on catching System.Exception for validation errors will need to be updated to handle the new exception types ('ArgNullException', 'ArgOutOfRangeException', 'InvOpException, etc.).

## [1.0.0] - 2025-02-14

First stable release of `E314.Protect`.

### Added

- Static utility class `Requires` for validating method arguments and object states. Throws descriptive exceptions when validation fails.
  - `NotNull`: Validates that a parameter is not `null`.
  - `NotEmpty`: Validates that strings or collections are not empty.
  - `InRange`: Validates that numeric values are within a specified range.
  - `Ensure`: Validates that a given condition is true.
  - `NoNullElements`: Validates that collections do not contain `null` elements.
</PackageReleaseNotes>
    </PropertyGroup>

    <ItemGroup>
        <None Include="..\E314.Protect.Upm\Packages\com.e314.protect\README.md" Pack="true" PackagePath="\" />
        <None Include="..\LICENSE" Pack="true" PackagePath="\" />
    </ItemGroup>

    <ItemGroup>
      <Compile Include="..\E314.Protect.Upm\Packages\com.e314.protect\Runtime\Requires.cs">
        <Link>Runtime\Requires.cs</Link>
      </Compile>
    </ItemGroup>

    <ItemGroup>
      <PackageReference Include="E314.Exceptions" Version="1.1.0" />
    </ItemGroup>

</Project>
